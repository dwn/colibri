#!/bin/bash
echo "
********************************************************
* DEV MODE INSTRUCTIONS (hot-loads editable component)
********************************************************
First run component server:
./local component
Then in new terminal:
./local app
********************************************************
* PROD MODE INSTRUCTIONS (builds and installs component)
********************************************************
./local
********************************************************
"
COMPONENT=st_font_tool
ST_DEV_MODE='0'
if [ "$1" == "component" ] || [ "$1" == "app" ]; then
  echo "*** DEV MODE ***"
  ST_DEV_MODE='1'
fi
if [ "$1" == "component" ] || [ -z "$1" ]; then
  #How to develop a new component for streamlit from https://github.com/streamlit/component-template
  #├── build/               <- where py build is generated
  #├── MANIFEST.in          <- change
  #├── setup.py             <- name="X"
  #└── st_tool              <- folder name
  #    ├── __init__.py      <- change
  #    └── frontend         <- runs `npm install` and `npm run build` here (delete old node_modules if necessary)
  #        ├── build/       <- where npm build is generated
  #        ├── package.json <- "name": "X"
  #        ├── src/         <- main files
  #        ├── public/
  #        ├── .env
  #        ├── .prettierc
  #        ├── package-lock.json
  #        └── tsconfig.json
  (cd "${COMPONENT}/${COMPONENT}/frontend" && npm install && npm run build && if [ "$ST_DEV_MODE" == "1" ]; then npm run start; fi)
fi
if [ "$1" == "app" ] || [ -z "$1" ]; then
  OPTS=""
  if [ "$ST_DEV_MODE" == "1" ]; then
    OPTS="-e"
  fi
  pip install ${OPTS} "./${COMPONENT}" && streamlit run st_app.py
fi
